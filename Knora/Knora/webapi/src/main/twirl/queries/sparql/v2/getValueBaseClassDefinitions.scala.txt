@*
 * Copyright © 2015 Lukas Rosenthaler, Benjamin Geer, Ivan Subotic,
 * Tobias Schweizer, André Kilchenmann, and Sepideh Alassi.
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI

@**
 * Gets all the standoff class definitions.
 *
 * @param triplestore the name of the triplestore being used.
 *@
 @(triplestore: String)

PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?graph ?valueBaseClass ?valueBaseClassPred ?valueBaseClassObj ?valueBaseClassObjLang ?cardinalityProp ?cardinality ?cardinalityVal
@* Ensure that inference is not used in this query. *@
@if(triplestore.startsWith("graphdb")) {
    FROM <http://www.ontotext.com/explicit>
}
WHERE {

    GRAPH ?graph {
        ?valueBaseClass rdf:type owl:Class .
    }

    ?valueBaseClass rdfs:subClassOf knora-base:ValueBase .
    # exclude knora-base:Value
    FILTER(?valueBaseClass != knora-base:Value)

    {
        ?valueBaseClass rdfs:subClassOf ?restriction .
        ?restriction rdf:type owl:Restriction .
        ?restriction owl:onProperty ?cardinalityProp .
        ?cardinalityProp rdfs:subPropertyOf+ knora-base:objectCannotBeMarkedAsDeleted .
        ?restriction ?cardinality ?cardinalityVal .
        FILTER(?cardinality = owl:cardinality || ?cardinality = owl:minCardinality || ?cardinality = owl:maxCardinality)
    }
    UNION
    {
        ?valueBaseClass ?valueBaseClassPred ?valueBaseClassObj .
        FILTER(?valueBaseClassPred != rdf:type && !isBlank(?valueBaseClassObj))
        BIND(lang(?valueBaseClassObj) as ?valueBaseClassObjLang)
    }
}